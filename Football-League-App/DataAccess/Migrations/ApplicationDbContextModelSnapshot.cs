// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataStructure.Models.Assist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AssisterID")
                        .HasColumnType("int");

                    b.Property<int?>("FootballMatchID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AssisterID");

                    b.HasIndex("FootballMatchID");

                    b.ToTable("Assists");
                });

            modelBuilder.Entity("DataStructure.Models.FootballLeague", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FootballLeagues");
                });

            modelBuilder.Entity("DataStructure.Models.FootballMatch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("HostID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduledDateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("VisitorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("HostID");

                    b.HasIndex("VisitorID");

                    b.ToTable("FootballMatches");
                });

            modelBuilder.Entity("DataStructure.Models.FootballPlayer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FootballTeamID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FootballTeamID");

                    b.ToTable("FootballPlayers");
                });

            modelBuilder.Entity("DataStructure.Models.FootballTeam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FootballLeagueID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Stadium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FootballLeagueID");

                    b.ToTable("FootballTeams");
                });

            modelBuilder.Entity("DataStructure.Models.Goal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("FootballMatchID")
                        .HasColumnType("int");

                    b.Property<int>("GoalscorerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FootballMatchID");

                    b.HasIndex("GoalscorerID");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("DataStructure.Models.Assist", b =>
                {
                    b.HasOne("DataStructure.Models.FootballPlayer", "Assister")
                        .WithMany()
                        .HasForeignKey("AssisterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStructure.Models.FootballMatch", null)
                        .WithMany("Assists")
                        .HasForeignKey("FootballMatchID");

                    b.Navigation("Assister");
                });

            modelBuilder.Entity("DataStructure.Models.FootballMatch", b =>
                {
                    b.HasOne("DataStructure.Models.FootballTeam", "Host")
                        .WithMany()
                        .HasForeignKey("HostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStructure.Models.FootballTeam", "Visitor")
                        .WithMany()
                        .HasForeignKey("VisitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Host");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("DataStructure.Models.FootballPlayer", b =>
                {
                    b.HasOne("DataStructure.Models.FootballTeam", "FootballTeam")
                        .WithMany("FootballPlayers")
                        .HasForeignKey("FootballTeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FootballTeam");
                });

            modelBuilder.Entity("DataStructure.Models.FootballTeam", b =>
                {
                    b.HasOne("DataStructure.Models.FootballLeague", "FootballLeague")
                        .WithMany("FootballTeams")
                        .HasForeignKey("FootballLeagueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FootballLeague");
                });

            modelBuilder.Entity("DataStructure.Models.Goal", b =>
                {
                    b.HasOne("DataStructure.Models.FootballMatch", null)
                        .WithMany("Goals")
                        .HasForeignKey("FootballMatchID");

                    b.HasOne("DataStructure.Models.FootballPlayer", "Goalscorer")
                        .WithMany()
                        .HasForeignKey("GoalscorerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goalscorer");
                });

            modelBuilder.Entity("DataStructure.Models.FootballLeague", b =>
                {
                    b.Navigation("FootballTeams");
                });

            modelBuilder.Entity("DataStructure.Models.FootballMatch", b =>
                {
                    b.Navigation("Assists");

                    b.Navigation("Goals");
                });

            modelBuilder.Entity("DataStructure.Models.FootballTeam", b =>
                {
                    b.Navigation("FootballPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
