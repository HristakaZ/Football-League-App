// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230929160514_AddedResult")]
    partial class AddedResult
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataStructure.Models.FootballLeague", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FootballLeagues");
                });

            modelBuilder.Entity("DataStructure.Models.FootballMatch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduledDateAndTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("FootballMatches");
                });

            modelBuilder.Entity("DataStructure.Models.FootballPlayer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FootballTeamID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FootballTeamID");

                    b.ToTable("FootballPlayers");
                });

            modelBuilder.Entity("DataStructure.Models.FootballTeam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FootballLeagueID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Stadium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FootballLeagueID");

                    b.ToTable("FootballTeams");
                });

            modelBuilder.Entity("FootballMatchFootballTeam", b =>
                {
                    b.Property<int>("FootballMatchesID")
                        .HasColumnType("int");

                    b.Property<int>("FootballTeamsID")
                        .HasColumnType("int");

                    b.HasKey("FootballMatchesID", "FootballTeamsID");

                    b.HasIndex("FootballTeamsID");

                    b.ToTable("FootballMatchFootballTeam");
                });

            modelBuilder.Entity("DataStructure.Models.FootballPlayer", b =>
                {
                    b.HasOne("DataStructure.Models.FootballTeam", "FootballTeam")
                        .WithMany("FootballPlayers")
                        .HasForeignKey("FootballTeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FootballTeam");
                });

            modelBuilder.Entity("DataStructure.Models.FootballTeam", b =>
                {
                    b.HasOne("DataStructure.Models.FootballLeague", "FootballLeague")
                        .WithMany("FootballTeams")
                        .HasForeignKey("FootballLeagueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FootballLeague");
                });

            modelBuilder.Entity("FootballMatchFootballTeam", b =>
                {
                    b.HasOne("DataStructure.Models.FootballMatch", null)
                        .WithMany()
                        .HasForeignKey("FootballMatchesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataStructure.Models.FootballTeam", null)
                        .WithMany()
                        .HasForeignKey("FootballTeamsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataStructure.Models.FootballLeague", b =>
                {
                    b.Navigation("FootballTeams");
                });

            modelBuilder.Entity("DataStructure.Models.FootballTeam", b =>
                {
                    b.Navigation("FootballPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
